# Preparation
# The tests of the CLI makes it necessary to create 'develop --user' installations.
# 1) clean possible remnants of previous develop--user installations
# 2) clone and build Cadishi, requires deploy-key
# 3) build Capriqorn
before_script:
  - export BASE=`pwd`
  - rm -f ~/.local/lib/python2.7/site-packages/cadishi.egg-link
  - rm -f ~/.local/lib/python2.7/site-packages/capriqorn.egg-link
  - git clone git@gitlab.mpcdf.mpg.de:MPIBP-Hummer/Cadishi.git
  - cd Cadishi
  - CAD_CUDA=0 python setup.py develop --user
  - cd $BASE
  - python setup.py develop --user

test_job:
  script:
    # Run the included unit test cases
    - py.test capriqorn
    # Call the Capriqorn CLI by running the trivial included test case
    - mkdir tmp
    - cd tmp
    - capriq --help
    - capriq --version
    - capriq example
    - capriq preproc
    - capriq histo
    - capriq postproc
    - cd postprocessor_output
    - capriq unpack postprocessor.h5
    - capriq merge --output foo.h5 postprocessor.h5
    # call the parallel pipeline testcases
    - capriq preproc ${BASE}/capriqorn/tests/data/test_preprocessor_parallel_success.yaml
    # cannot get the following tests to work, gitlab CI seems to detect dying processes
    # - capriq preproc ${BASE}/capriqorn/tests/data/test_preprocessor_parallel_child_failure.yaml  || [ $? == 1 ]
    # - capriq preproc ${BASE}/capriqorn/tests/data/test_preprocessor_parallel_master_failure.yaml || [ $? == 1 ]
    - cd $BASE
    # Test the documentation creation.
    - python setup.py build_sphinx
    # Test the tarball creation.
    - python setup.py sdist --formats=gztar

# Clean up remnants.
after_script:
  - python setup.py develop --user --uninstall || true
  - rm -f ~/.local/lib/python2.7/site-packages/cadishi.egg-link
  - rm -f ~/.local/lib/python2.7/site-packages/capriqorn.egg-link
